class Solution {
public:
    vector<int> sortArrayByParityII(vector<int>& nums) {
        
Approach 1 : T.C = O(N) , S.C = O(N)
        
        int n = nums.size();
        vector<int> ans(n,0);
        int oddPtr = 1 , evenPtr = 0;
        
        for(int i = 0; i < n; i++)
        {
            if(nums[i] % 2 == 0)
            {
                ans[evenPtr] = nums[i];
                evenPtr += 2;
            }
            else
            {
                ans[oddPtr] = nums[i];
                oddPtr += 2;
            }
        }
        return ans;
        
Approach 2 : T.C = O(N) , S.C = O(1)
    
        int n = nums.size();    
        for(int i = 0 , j = 1; i < n; )
        {
           if(nums[i] % 2 == 0) i += 2;
            else if(nums[j] % 2 != 0) j += 2;
            else swap(nums[i],nums[j]);
        }
        return nums;
    }
};
